[user]
  email = sunny@sunfox.org
  name = Sunny Ripert

[github]
  user = sunny

[ghi]
  token = !security find-internet-password -a sunny -s github.com -l 'ghi token' -w

[core]
  pager = less -FRSX

  # Default editor. Use `subl -n -w` for Sublime Text.
  editor = vim

  # Autoconvert line endings from CRLF (Windows) to LF (everybody else)
  autocrlf = input

  # Global gitignore file
  excludesfile = ~/.gitignore

  # Helps using commands with unicode characters on OSX
  quotepath = false

  # Helps using unicode characters in filenames on file systems like HFS+ on OSX
  precomposeunicode = true

[credential]
  # Use OSX's keychain to remember your passwords
  helper = osxkeychain

[alias]
  # Quicker access
  co = checkout
  br = branch
  ci = commit

  # Short status
  st = status -sb

  # Diff as stats
  stat = !git --no-pager diff --stat

  # Add files by patches
  ap = add -p

  # One-line log via http://www.jukie.net/bart/blog/pimping-out-git-log
  l = log --pretty=format:'%C(yellow)%h%Creset %s %Cgreen(%cr) %C(bold blue)%an%Creset %C(yellow)%d%Creset'

  # One-linne log with a graph
  lg = log --graph --pretty=format:'%C(yellow)%h%Creset %s %Cgreen(%cr) %C(bold blue)%an%Creset %C(yellow)%d%Creset'

  # Serve local repo. http://coderwall.com/p/eybtga
  # Then others can access via `git clone git://#{YOUR_IP_ADDRESS}/
  serve = !git daemon --reuseaddr --verbose  --base-path=. --export-all ./.git

  # Removes a file from the index
  unstage = reset HEAD --

  # Via https://gist.github.com/robmiller/6018582
  # Get the current branch name (not so useful in itself, but used in
  # other aliases)
  branch-name = "!git rev-parse --abbrev-ref HEAD"

  # Sorted list of branches
  bra = !~/bin/git-bra

  # Commit with a temporary message
  wip = "!git commit -m \"$(git branch-name) WIP\""

  # Pull rebase
  p = pull --rebase

  # Push if pronto does not detect any necessary fixes
  pu = !bundle exec pronto run -c origin/master --exit-code && git push origin

  # Fetch all remotes, with tags and remove dead branches
  f = !~/bin/git-fetch-and-delete

  # Clean all branches except master and current branch (dangerous)
  clean-branches = !git branch | egrep -v '(master|\\*)' | xargs git branch -D

  # Clean merged branches
  sweep-branches = !git branch --merged master | grep -v 'master$' | xargs git branch -d && git remote prune origin

  # Mark the default upstream as origin/
  default-upstream = "!git branch --set-upstream-to=origin/$(git branch-name)"

  # Launch only touched rspec files
  rspec = "!bin/rspec $(git status --short | grep '_spec.rb' | cut -b 3-)"

[help]
  # Activate Git's "Did you mean" after a number of seconds
  autocorrect = 20

[push]
  default = current

[pull]
	default = current

[branch "master"]
  mergeoptions = --no-edit

# Color all the things

[color]
  ui = auto
  diff = auto
  interactive = auto
  status = auto
  branch = auto
  pager = true

[color "branch"]
  current = cyan reverse
  local = cyan
  remote = magenta

[color "diff"]
  meta = yellow

[color "status"]
  header = cyan
  added = yellow
  changed = green
  untracked = cyan
  nobranch = red bold

# Add to your Rails project's `.gitattributes` or `.git/info/attributes`:
#
#     db/schema.rb merge=railsschema
#
[merge "railsschema"]
  name = Newer Rails schema version
  driver = "ruby -e '\n\
    system %(git), %(merge-file), %(--marker-size=%L), %(%A), %(%O), %(%B)\n\
    b = File.read(%(%A))\n\
    b.sub!(/^<+ .*\\nActiveRecord::Schema\\.define.:version => (\\d+). do\\n=+\\nActiveRecord::Schema\\.define.:version => (\\d+). do\\n>+ .*/) do\n\
      %(ActiveRecord::Schema.define(:version => #{[$1, $2].max}) do)\n\
    end\n\
    File.open(%(%A), %(w)) {|f| f.write(b)}\n\
    exit 1 if b.include?(%(<)*%L)'"
